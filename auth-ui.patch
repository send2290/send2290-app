diff --git a/components/Form2290.tsx b/components/Form2290.tsx
index 0123456..789abcd 100644
--- a/components/Form2290.tsx
+++ b/components/Form2290.tsx
@@ -1,5 +1,8 @@
-"use client";
-import { useState, useEffect, ChangeEvent } from 'react'
+ "use client";
+ import React, { useState, useEffect, ChangeEvent } from 'react'
+ import { auth } from '../lib/firebase'
+ import { onAuthStateChanged, signOut } from 'firebase/auth'
 import LoginForm from './LoginForm'
 import LoginModal from './LoginModal'
 import { checkUserExists, createUserAndSendPassword } from '../lib/authUtils'
@@ -60,6 +63,13 @@ export default function Form2290() {
   const [formData, setFormData] = useState({ /* ... */ })

+  // Auth state & logout
+  const [user, setUser] = useState<any>(null)
+  useEffect(() => {
+    const unsubscribe = onAuthStateChanged(auth, u => setUser(u))
+    return unsubscribe
+  }, [])
+  const handleLogout = async () => { try { await signOut(auth) } catch (e) { console.error('Logout error', e) } }
+
   // UI states
   const [showLogin, setShowLogin] = useState(false)
   const [showLoginModal, setShowLoginModal] = useState(false)
@@ -240,24 +250,33 @@ return (
       <h1 style={header}>Website Under Development!</h1>
       <p style={{ textAlign: 'center', marginTop: -8 }}>By Majd Consulting, PLLC</p>
 
-      {/* ðŸ”’ Login Toggle */}
-      <div style={{ textAlign: 'center', marginBottom: 20 }}>
-        <button
-          onClick={() => setShowLogin(prev => !prev)}
-          style={{ padding: '6px 12px', borderRadius: 4, backgroundColor: '#1565c0', color: '#fff', border: 'none' }}
-        >
-          {showLogin ? 'Hide Login' : 'Login or Create Account'}
-        </button>
-      </div>
-
-      {/* ðŸ”’ Embedded Login Form */}
-      {showLogin && (
-        <div style={{ maxWidth: 420, margin: '0 auto', marginBottom: 30 }}>
-          <LoginForm />
-        </div>
-      )}
-
-      {/* ðŸ”’ Login Modal for existing users */}
-      {showLoginModal && (
-        <LoginModal email={pendingEmail} onClose={() => setShowLoginModal(false)} />
-      )}
+      {/* Auth & Logout */}
+      <div style={{ textAlign: 'right', marginBottom: 20 }}>
+        {user ? (
+          <>
+            Logged in as <strong>{user.email}</strong>{' '}
+            <button
+              onClick={handleLogout}
+              style={{ ...btnSmall, backgroundColor: '#d32f2f', color: '#fff' }}
+            >
+              Logout
+            </button>
+          </>
+        ) : (
+          <span style={{ fontStyle: 'italic' }}>Not signed in</span>
+        )}
+      </div>
+
+      {/* Login Toggle */}
+      {!user && (
+        <div style={{ textAlign: 'center', marginBottom: 20 }}>
+          <button
+            onClick={() => setShowLogin(p => !p)}
+            style={{ ...btnSmall, backgroundColor: '#1565c0', color: '#fff' }}
+          >
+            {showLogin ? 'Hide Login' : 'Login or Create Account'}
+          </button>
+        </div>
+      )}
+      {showLogin && !user && <LoginForm />}
+      {showLoginModal && <LoginModal email={pendingEmail} onClose={() => setShowLoginModal(false)} />}
 
       {/* Business Info */}
       {/* ...rest of your form as originally coded... */}
